library(tidyverse)
library(purrr)
library(tidyr)
library(janitor)
  #loading library that you will use daily.

penguins <- penguins
penguins_raw <- penguins_raw
  #loading the penguin data set to use

clean_penguins <- na.omit(penguins_raw)
  #cleanup the raw penguin data

clean_penguins %>% select(-"Region",-"Stage")
  #Using the select() command selects what column you want, Using "-" will remove the column selected.

flipper_length <- clean_penguins %>% 
      arrange(`Flipper Length (mm)`)
  #sorts the Flipper Length column

flipper_length_desc <- clean_penguins %>% 
      arrange(desc(`Flipper Length (mm)`))
  #sorts the flipper length column by descending order


flipper_length_adelie_only <- clean_penguins %>% 
  filter(Species == "Adelie Penguin (Pygoscelis adeliae)") %>% 
  select(Species, `Flipper Length (mm)`) %>% 
  arrange(`Flipper Length (mm)`)
  #this command filters out just the adelie species and flipper length and aranges in asc order.
  #first it uses the filter and filters out just the adelie species
  #next it selects the columents species, and flipper length
  #last it aranges the columns by flipper length in asc order.

toolbox_function <- function(data, variable_name, species, exclude_cols = NULL, arrange_order = "ascending", plot_cols = NULL) {
  
  # Filter by species
  filtered_data <- data %>% filter(Species == species)
  
  # Exclude columns
  if (!is.null(exclude_cols)) {
    filtered_data <- filtered_data %>% select(-exclude_cols)
  }
  
  # Arrange data
  if (arrange_order == "ascending") {
    filtered_data <- filtered_data %>% arrange(across(.cols = everything()))
  } else if (arrange_order == "descending") {
    filtered_data <- filtered_data %>% arrange(across(.cols = everything(), .desc = TRUE))
  } else {
    stop("Invalid arrange order. Please enter 'ascending' or 'descending'.")
  }
  
  # Create new variable
  new_var <- filtered_data %>% pull(plot_cols[1]) - filtered_data %>% pull(plot_cols[2])
  names(new_var) <- variable_name
  
  # Plot data
  if (!is.null(plot_cols)) {
    ggplot(filtered_data, aes(x = .data[[plot_cols[1]]], y = .data[[plot_cols[2]]])) +
      geom_point()
  }
  
  return(new_var)
}
